/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.AndroidXComposePlugin
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.gradle.plugin.KotlinSourceSetTree

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
    alias(libs.plugins.kotlinSerialization)
    id("JetbrainsAndroidXPlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXComposeMultiplatform {
    android()
    desktop()
    darwin()
    js()
    wasm()
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                api "androidx.annotation:annotation:1.9.1"

                implementation project(":compose:foundation:foundation-layout")
                implementation project(":compose:animation:animation-core")
                implementation project(":compose:ui:ui-backhandler")
                api project(":compose:runtime:runtime")
                api project(":compose:animation:animation")
                api project(":compose:runtime:runtime-saveable")
                api project(":compose:ui:ui")
                api project(":lifecycle:lifecycle-common")
                api project(":lifecycle:lifecycle-runtime")
                api project(":lifecycle:lifecycle-runtime-compose")
                api project(":lifecycle:lifecycle-viewmodel")
                api project(":lifecycle:lifecycle-viewmodel-compose")
                api project(":lifecycle:lifecycle-viewmodel-savedstate")
                api project(":navigation:navigation-common")
                api project(":navigation:navigation-runtime")
                api project(":savedstate:savedstate")

                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinSerializationCore)
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.kotlinTest)
                implementation(project(":compose:material:material"))
                implementation(project(":navigation:navigation-testing"))
                implementation(project(":internal-testutils-navigation"))
                implementation(project(":kruth:kruth"))
                implementation(project(":compose:ui:ui-test"))
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                api("androidx.activity:activity-compose:1.8.0")
            }
        }

        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation(project(":compose:material:material"))
                implementation project(":compose:test-utils")
                implementation project(":compose:ui:ui-tooling")
                implementation(project(":navigation:navigation-testing"))
                implementation(project(":internal-testutils-navigation"))
                implementation(project(":compose:ui:ui-test-junit4"))
                implementation("androidx.lifecycle:lifecycle-livedata-core:2.8.4")
                implementation("androidx.activity:activity-ktx:1.8.2")
                implementation("androidx.collection:collection-ktx:1.1.0")
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
            }
        }


        jbMain.dependsOn(commonMain)
        jbTest.dependsOn(commonTest)

        desktopMain {
            dependsOn(jvmMain)
            dependsOn(jbMain)
        }
        desktopTest {
            dependsOn(jvmTest)
            dependsOn(jbTest)
            dependencies {
                implementation(libs.skikoCurrentOs)
                implementation(libs.kotlinCoroutinesSwing)
            }
        }
        nonJvmMain.dependsOn(jbMain)
        nativeMain.dependsOn(nonJvmMain)
        webMain.dependsOn(nonJvmMain)
        darwinMain.dependsOn(nativeMain)
        linuxMain.dependsOn(nativeMain)

        nonJvmTest.dependsOn(jbTest)
        nativeTest.dependsOn(nonJvmTest)
        webTest.dependsOn(nonJvmTest)
        darwinTest.dependsOn(nativeTest)
        linuxTest.dependsOn(nativeTest)

        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                if (target.konanTarget.family.appleFamily) {
                    target.compilations["main"].defaultSourceSet.dependsOn(darwinMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(darwinTest)
                } else if (target.konanTarget.family == org.jetbrains.kotlin.konan.target.Family.LINUX) {
                    target.compilations["main"].defaultSourceSet.dependsOn(linuxMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(linuxTest)
                }
            } else if (target.platformType in [KotlinPlatformType.js, KotlinPlatformType.wasm]) {
                target.compilations["main"].defaultSourceSet.dependsOn(webMain)
                target.compilations["test"].defaultSourceSet.dependsOn(webTest)
            }
        }
    }
}

androidx {
    name = "Compose Navigation"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2020"
    description = "Compose integration with Navigation"
    legacyDisableKotlinStrictApiMode = true
}

android {
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/../../golden/navigation/navigation-compose"

    namespace "androidx.navigation.compose"
}
