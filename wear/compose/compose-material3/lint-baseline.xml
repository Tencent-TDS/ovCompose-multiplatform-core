<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.10.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (8.10.0-alpha07)" variant="all" version="8.10.0-alpha07">

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun FilledButton("
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun FilledTonalButton("
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun FilledVariantButton("
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun OutlinedButton(status: Status): Color {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun ChildButton(status: Status): Color {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun ThreeSlotFilledButton(status: Status): ThreeSlotButtonColors {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun ThreeSlotFilledTonalButton(status: Status): ThreeSlotButtonColors {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun ThreeSlotOutlinedButton(status: Status): ThreeSlotButtonColors {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions with a return type should start with a lowercase letter"
        errorLine1="private fun ThreeSlotChildButton(status: Status): ThreeSlotButtonColors {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ButtonTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleFilledIconButton(enabled: Boolean, isCompact: Boolean) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleFilledTonalIconButton(enabled: Boolean, isCompact: Boolean) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleOutlinedIconButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleIconButton("
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleIconToggleButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun PickerGroupScope.addPickerColumns(count: Int, selectedColumn: Int) ="
        errorLine2="                                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/PickerGroupTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun PickerGroupScope.addPickerColumnWithTag("
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/PickerGroupTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleRadioButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/RadioButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleSplitRadioButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/RadioButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleFilledTextButton(enabled: Boolean) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleFilledTonalTextButton(enabled: Boolean) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleOutlinedTextButton(enabled: Boolean) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleTextButton("
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleText() {"
        errorLine2="                ~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleTextToggleButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleCheckboxButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleSplitCheckboxButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleSwitchButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun sampleSplitSwitchButton("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="LocalContextConfigurationRead"
        message="Reading Configuration using LocalContext.current.resources.configuration"
        errorLine1="    originalContext.resources.configuration.updateFrom(fixedScreenSizeConfiguration)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/Material3Test.kt"/>
    </issue>

    <issue
        id="LocalContextConfigurationRead"
        message="Reading Configuration using LocalContext.current.resources.configuration"
        errorLine1="                val screenSize = LocalContext.current.resources.configuration.smallestScreenWidthDp"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TimeTextScreenshotTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/TextToggleButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="UnrememberedMutableState"
        message="Creating a state object during composition without using `remember`"
        errorLine1="                mutableStateOf(progress)"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="UnrememberedMutableState"
        message="Creating a state object during composition without using `remember`"
        errorLine1="                mutableStateOf(progress)"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/IconButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="                    { progress.value },"
        errorLine2="                               ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/AnimatedStateTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="            smoothProgress = rememberAnimatedStateOf({ progress.value }, snap())"
        errorLine2="                                                                ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/AnimatedStateTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="            LaunchedEffect(Unit) { progress.value = 1f }"
        errorLine2="                                            ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/AnimatedStateTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="                    { progress.value },"
        errorLine2="                               ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/AnimatedStateTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="                    progress = { progress.value },"
        errorLine2="                                          ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/LinearProgressIndicatorScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="        rule.runOnIdle { progress.value = 1f }"
        errorLine2="                                  ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/LinearProgressIndicatorScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `longValue` to avoid unnecessary allocations."
        errorLine1="        frameMillis.value += timeToAdd"
        errorLine2="                    ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/PlaceholderTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `longValue` to avoid unnecessary allocations."
        errorLine1="        frameMillis.value += PLACEHOLDER_SHIMMER_DURATION_MS"
        errorLine2="                    ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/PlaceholderTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `longValue` to avoid unnecessary allocations."
        errorLine1="        frameMillis.value = currentTime"
        errorLine2="                    ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/PlaceholderTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="                    progress = { progress.value },"
        errorLine2="                                          ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ProgressIndicatorScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="        rule.runOnIdle { progress.value = 1f }"
        errorLine2="                                  ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ProgressIndicatorScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="                    progress = { progress.value },"
        errorLine2="                                          ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ProgressIndicatorScreenshotTest.kt"/>
    </issue>

    <issue
        id="AutoboxingStateValueProperty"
        message="Assigning `value` will cause an autoboxing operation. Use `floatValue` to avoid unnecessary allocations."
        errorLine1="        rule.runOnIdle { progress.value = 1f }"
        errorLine2="                                  ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/material3/ProgressIndicatorScreenshotTest.kt"/>
    </issue>

</issues>
