diff --git a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/BinaryCompatibilityChecker.kt b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/BinaryCompatibilityChecker.kt
index ea7087c5287..479abcd3114 100644
--- a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/BinaryCompatibilityChecker.kt
+++ b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/BinaryCompatibilityChecker.kt
@@ -36,6 +36,7 @@ import org.jetbrains.kotlin.library.abi.AbiTypeArgument.StarProjection
 import org.jetbrains.kotlin.library.abi.AbiTypeArgument.TypeProjection
 import org.jetbrains.kotlin.library.abi.AbiTypeParameter
 import org.jetbrains.kotlin.library.abi.AbiValueParameter
+import org.jetbrains.kotlin.library.abi.AbiValueParameterKind
 import org.jetbrains.kotlin.library.abi.ExperimentalLibraryAbiReader
 import org.jetbrains.kotlin.library.abi.LibraryAbi

@@ -271,18 +272,22 @@ class BinaryCompatibilityChecker(
                     "$qualifiedName"
             )
         }
-        if (hasExtensionReceiverParameter != otherFunction.hasExtensionReceiverParameter) {
+        fun AbiFunction.hasExtensionReceiverParameter(): Boolean =
+            valueParameters.any { it.kind == AbiValueParameterKind.EXTENSION_RECEIVER }
+        if (hasExtensionReceiverParameter() != otherFunction.hasExtensionReceiverParameter()) {
             errors.add(
                 "hasExtensionReceiverParameter changed from " +
-                    "${otherFunction.hasExtensionReceiverParameter} to " +
-                    "$hasExtensionReceiverParameter for $qualifiedName"
+                    "${otherFunction.hasExtensionReceiverParameter()} to " +
+                    "${hasExtensionReceiverParameter()} for $qualifiedName"
             )
         }
-        if (contextReceiverParametersCount != otherFunction.contextReceiverParametersCount) {
+        fun AbiFunction.contextReceiverParametersCount(): Int =
+            valueParameters.count { it.kind == AbiValueParameterKind.CONTEXT }
+        if (contextReceiverParametersCount() != otherFunction.contextReceiverParametersCount()) {
             errors.add(
                 "contextReceiverParametersCount changed from " +
-                    "${otherFunction.contextReceiverParametersCount} to " +
-                    "$contextReceiverParametersCount for $qualifiedName"
+                    "${otherFunction.contextReceiverParametersCount()} to " +
+                    "${contextReceiverParametersCount()} for $qualifiedName"
             )
         }
         returnType.isBinaryCompatibleWith(
diff --git a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KLibDumpParser.kt b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KLibDumpParser.kt
index b1f05c6089c..6da86e5c3d0 100644
--- a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KLibDumpParser.kt
+++ b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KLibDumpParser.kt
@@ -32,9 +32,11 @@ import org.jetbrains.kotlin.library.abi.AbiProperty
 import org.jetbrains.kotlin.library.abi.AbiQualifiedName
 import org.jetbrains.kotlin.library.abi.AbiSignatureVersion
 import org.jetbrains.kotlin.library.abi.AbiSignatures
+import org.jetbrains.kotlin.library.abi.AbiValueParameterKind
 import org.jetbrains.kotlin.library.abi.ExperimentalLibraryAbiReader
 import org.jetbrains.kotlin.library.abi.LibraryAbi
 import org.jetbrains.kotlin.library.abi.LibraryManifest
+import org.jetbrains.kotlin.library.abi.impl.AbiAnnotationListImpl
 import org.jetbrains.kotlin.library.abi.impl.AbiClassImpl
 import org.jetbrains.kotlin.library.abi.impl.AbiConstructorImpl
 import org.jetbrains.kotlin.library.abi.impl.AbiEnumEntryImpl
@@ -171,7 +173,7 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
         return AbiClassImpl(
             qualifiedName = abiQualifiedName,
             signatures = signaturesStub,
-            annotations = emptySet(), // annotations aren't part of klib dumps
+            annotations = AbiAnnotationListImpl.EMPTY, // annotations aren't part of klib dumps
             modality = modality,
             kind = kind,
             isInner = isInner,
@@ -224,7 +226,7 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
         return AbiPropertyImpl(
             qualifiedName = qualifiedName,
             signatures = signaturesStub,
-            annotations = emptySet(), // annotations aren't part of klib dumps
+            annotations = AbiAnnotationListImpl.EMPTY, // annotations aren't part of klib dumps
             modality = modality,
             kind = kind,
             getter = getter,
@@ -245,7 +247,7 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
         return AbiEnumEntryImpl(
             qualifiedName = qualifiedName,
             signatures = signaturesStub,
-            annotations = emptySet()
+            annotations = AbiAnnotationListImpl.EMPTY
         )
     }

@@ -286,6 +288,7 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
             if (null != functionReceiver) {
                 val functionReceiverAsValueParam =
                     AbiValueParameterImpl(
+                        kind = AbiValueParameterKind.REGULAR,
                         type = functionReceiver,
                         isVararg = false,
                         hasDefaultArg = false,
@@ -301,13 +304,13 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
         return AbiFunctionImpl(
             qualifiedName = abiQualifiedName,
             signatures = signaturesStub,
-            annotations = emptySet(), // annotations aren't part of klib dumps
+            annotations = AbiAnnotationListImpl.EMPTY, // annotations aren't part of klib dumps
             modality = modality,
             isInline = isInline,
             isSuspend = isSuspend,
             typeParameters = typeParams,
-            hasExtensionReceiverParameter = null != functionReceiver,
-            contextReceiverParametersCount = 0, // TODO
+            // hasExtensionReceiverParameter = null != functionReceiver,
+            // contextReceiverParametersCount = 0, // TODO
             valueParameters = allValueParameters,
             returnType = returnType
         )
@@ -329,9 +332,9 @@ class KlibDumpParser(klibDump: String, private val fileName: String? = null) {
         return AbiConstructorImpl(
             qualifiedName = abiQualifiedName,
             signatures = signaturesStub,
-            annotations = emptySet(), // annotations aren't part of klib dumps
+            annotations = AbiAnnotationListImpl.EMPTY, // annotations aren't part of klib dumps
             isInline = false, // TODO
-            contextReceiverParametersCount = 0, // TODO
+            // contextReceiverParametersCount = 0, // TODO
             valueParameters = valueParameters,
         )
     }
diff --git a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KlibParsingCursorExtensions.kt b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KlibParsingCursorExtensions.kt
index 602817ac256..4a533e56e60 100644
--- a/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KlibParsingCursorExtensions.kt
+++ b/binarycompatibilityvalidator/binarycompatibilityvalidator/src/main/java/androidx/binarycompatibilityvalidator/KlibParsingCursorExtensions.kt
@@ -31,6 +31,7 @@ import org.jetbrains.kotlin.library.abi.AbiTypeArgument
 import org.jetbrains.kotlin.library.abi.AbiTypeNullability
 import org.jetbrains.kotlin.library.abi.AbiTypeParameter
 import org.jetbrains.kotlin.library.abi.AbiValueParameter
+import org.jetbrains.kotlin.library.abi.AbiValueParameterKind
 import org.jetbrains.kotlin.library.abi.AbiVariance
 import org.jetbrains.kotlin.library.abi.ExperimentalLibraryAbiReader
 import org.jetbrains.kotlin.library.abi.impl.AbiTypeParameterImpl
@@ -279,6 +280,7 @@ internal fun Cursor.parseValueParameter(peek: Boolean = false): AbiValueParamete
     val isVararg = cursor.parseVarargSymbol() != null
     val hasDefaultArg = cursor.parseDefaultArg() != null
     return AbiValueParameterImpl(
+        kind = AbiValueParameterKind.REGULAR,
         type = type,
         isVararg = isVararg,
         hasDefaultArg = hasDefaultArg,
diff --git a/buildSrc/private/src/main/kotlin/androidx/build/AndroidXMultiplatformExtension.kt b/buildSrc/private/src/main/kotlin/androidx/build/AndroidXMultiplatformExtension.kt
index f397f1ad4d4..dabb21d8699 100644
--- a/buildSrc/private/src/main/kotlin/androidx/build/AndroidXMultiplatformExtension.kt
+++ b/buildSrc/private/src/main/kotlin/androidx/build/AndroidXMultiplatformExtension.kt
@@ -54,6 +54,7 @@ import org.jetbrains.kotlin.gradle.targets.js.ir.DefaultIncrementalSyncTask
 import org.jetbrains.kotlin.gradle.targets.js.nodejs.NodeJsEnvSpec
 import org.jetbrains.kotlin.gradle.targets.js.testing.KotlinJsTest
 import org.jetbrains.kotlin.gradle.targets.js.yarn.YarnLockMismatchReport
+import org.jetbrains.kotlin.gradle.targets.js.yarn.YarnRootEnvSpec
 import org.jetbrains.kotlin.gradle.targets.js.yarn.YarnRootExtension
 import org.jetbrains.kotlin.gradle.targets.jvm.KotlinJvmTarget
 import org.jetbrains.kotlin.gradle.tasks.Kotlin2JsCompile
@@ -765,10 +766,12 @@ private fun Project.configureNode() {
     }

     // https://youtrack.jetbrains.com/issue/KT-73913/K-Wasm-yarn-version-per-project
+    rootProject.extensions.findByType(YarnRootEnvSpec::class.java)?.let { yarn ->
+        yarn.version.set(getVersionByName("yarn"))
+        yarn.yarnLockMismatchReport.set(YarnLockMismatchReport.FAIL)
+    }
     rootProject.extensions.findByType(YarnRootExtension::class.java)?.let { yarn ->
         @Suppress("DEPRECATION")
-        yarn.version = getVersionByName("yarn")
-        yarn.yarnLockMismatchReport = YarnLockMismatchReport.FAIL
         if (!ProjectLayoutType.isPlayground(this)) {
             yarn.lockFileDirectory =
                 File(project.getPrebuiltsRoot(), "androidx/javascript-for-kotlin")
diff --git a/buildSrc/private/src/main/kotlin/androidx/build/clang/KonanBuildService.kt b/buildSrc/private/src/main/kotlin/androidx/build/clang/KonanBuildService.kt
index b0b2916af1e..417db30e233 100644
--- a/buildSrc/private/src/main/kotlin/androidx/build/clang/KonanBuildService.kt
+++ b/buildSrc/private/src/main/kotlin/androidx/build/clang/KonanBuildService.kt
@@ -151,7 +151,7 @@ abstract class KonanBuildService @Inject constructor(private val execOperations:
                         debug = false,
                         kind = LinkerOutputKind.DYNAMIC_LIBRARY,
                         outputDsymBundle = "unused",
-                        mimallocEnabled = false,
+                        // mimallocEnabled = false,
                         sanitizer = null
                     )
                     .finalLinkCommands()
diff --git a/buildSrc/public/src/main/kotlin/androidx/build/AndroidXConfiguration.kt b/buildSrc/public/src/main/kotlin/androidx/build/AndroidXConfiguration.kt
index b499b06428e..a22578246c0 100644
--- a/buildSrc/public/src/main/kotlin/androidx/build/AndroidXConfiguration.kt
+++ b/buildSrc/public/src/main/kotlin/androidx/build/AndroidXConfiguration.kt
@@ -37,6 +37,7 @@ interface AndroidXConfiguration {
     val kotlinBomVersion: Provider<String>
 }

+@Suppress("DEPRECATION")
 enum class KotlinTarget(val apiVersion: KotlinVersion, val catalogVersion: String) {
     KOTLIN_1_8(KotlinVersion.KOTLIN_1_8, "kotlin18"),
     KOTLIN_1_9(KotlinVersion.KOTLIN_1_9, "kotlin19"),
diff --git a/buildSrc/shared.gradle b/buildSrc/shared.gradle
index 7b0f27207c1..daaef1d1f3c 100644
--- a/buildSrc/shared.gradle
+++ b/buildSrc/shared.gradle
@@ -34,11 +34,11 @@ tasks.withType(KotlinCompile).configureEach {
     kotlinOptions {
         jvmTarget = "17"
         freeCompilerArgs += [
-                "-Werror",
+                //"-Werror",
                 "-Xskip-metadata-version-check",
                 "-Xjdk-release=17",
         ]
-        languageVersion = "1.8"
-        apiVersion = "1.8"
+        languageVersion = "1.9"
+        apiVersion = "1.9"
     }
 }
diff --git a/gradle/verification-keyring.keys b/gradle/verification-keyring.keys
index 383c7735f14..b2841b05a18 100644
--- a/gradle/verification-keyring.keys
+++ b/gradle/verification-keyring.keys
@@ -6174,6 +6174,31 @@ FJXLEW77wWHN+QpRD6BShYZDvUA2mtO0zlB8reU+VCxgnFfm66DkUg==
 =jYDe
 -----END PGP PUBLIC KEY BLOCK-----

+pub    17A27CE7A60FF5F0
+sub    E86F52398AF20855
+-----BEGIN PGP PUBLIC KEY BLOCK-----
+
+mQENBF/AfL8BCADpdkr7+1epRZLZJ6/si+Aj6fmELbzWHZmSSUYmRszcCgPq78xy
+bsW/d0grOOEEn9I/5N22gOoEumcFAsN6hn1thjsZyXLmaBfRj+8vri/zigAqrE7W
+zk7mKKK3IUuEi1rDqoEwGQbzHFP9UxiIouiWbYGhbkER0E8zDwmPlWZDXoQEzqWT
+KcgxAXldiZ6l0FACtxgU3n9oOq0hNQBqfpn22BM2FPjZDrM4rEfbeSt8ztORIviw
+7G9oUtYsbTbDvvADCL0wW05GcNz6BvcmDm79d+fk+5gb+GIaHurWuyTtmw5HCeXW
+QcKN1S96Wfm5Dz6UMOMeXujlvK1rxmsIIl3BABEBAAG5AQ0EX8B8vwEIAOkm8U7a
+QLAJ0FtUuY6ru+JQM3yHhIBA7dADpoyq+f/WN86Es9vw7gavO6tnJPnYh1IozEmQ
+4/OaXfKir2G8geLR6hvCsclgXT+RUS9Z60XBFWWhYwX8OrkdfHNnZPeSM8pwiQbh
+L8QGfF5AiJzG34ecIPekBWL0l0nYtVblAHQ5oKCv0h2e/cPylyBgJUGCtF0pLKuY
+l/jeH44UPz6ZUfTL662zbz7AGn8yX62h5PXyH2ZVuuwA2+vuAZCeTP+cQ7OGlIj/
+EDmggsSrcjVa/G/v+O9lPw9SGnnjoEzX+Ng+tEJNUEx22gvAISajFfM+XWVxVEqs
+z0B4U6PLa2feuVsAEQEAAYkBNgQYAQgAIBYhBD8F3anzFzAeknE21BeifOemD/Xw
+BQJfwHy/AhsMAAoJEBeifOemD/XwJ3cH/27Z8H7Bx53msUwaNO0RbWJNz65xrecM
+w5dvRVjjERYm+5UA5oQdySozlgrpWCAx8q13OMVpGRhodebFEqDZDHsjvJgm10Q7
+Q9fHkP56lCgxt68WPwmof8bkTYC8l9PmPfqdJgQlyX0zqOzxjETCfe+f1gc/m1lx
+tgnUeD3/ktyTkYu1hTt8rWM1ceCnZ08bIcjwjFZJDHZl+BmQ52zxUHJ5JAExZNn3
+vWkvn9JHGWPh6M7evaCcNAdv20A9AB45/aZlYRUN8hCI6xpHiMt4/tDbiImzko74
+zzMvjuz0NEEhREM8f0ld3G/7Meh/OudSEgtQAmwJ0UMZWJWaZ0FhnLI=
+=5I6i
+-----END PGP PUBLIC KEY BLOCK-----
+
 pub    1861C322C56014B2
 sub    9A347756830C4541
 -----BEGIN PGP PUBLIC KEY BLOCK-----
diff --git a/gradle/verification-metadata.xml b/gradle/verification-metadata.xml
index bcb2670ecdd..b8418fb1f0d 100644
--- a/gradle/verification-metadata.xml
+++ b/gradle/verification-metadata.xml
@@ -196,6 +196,7 @@
          <trusted-key id="3D11126EA77E4E07FBABB38614A84C976D265B25" group="com.google.protobuf"/>
          <trusted-key id="3DBC5D7DC2FB8DD68AA429BD353A436E043E3145" group="com.google.code.findbugs"/>
          <trusted-key id="3EB3846B3DC004C13883753CEEF9ECC7D5D90518" group="com.google.dagger"/>
+         <trusted-key id="3F05DDA9F317301E927136D417A27CE7A60FF5F0" group="io.opentelemetry"/>
          <trusted-key id="4021EEEAFF5DE8404DCD0A270AA3E5C3D232E79B" group="jakarta.inject" name="jakarta.inject-api"/>
          <trusted-key id="41A1A08C62FCA78B79D3081164A16FAAEC16A4BE" group="org.apache.commons" name="commons-math3"/>
          <trusted-key id="41CD49B4EF5876F9E9F691DABAC30622339994C4">
@@ -711,6 +712,17 @@
             <sha256 value="74bb0f3a80307c529421c3ed84517b8f543867709f41e53cd73df99e6442af4d" origin="Generated by Node" reason="Artifact is not signed. Remove when https://github.com/nodejs/node/issues/53917 is resolved"/>
          </artifact>
       </component>
+      <component group="org.nodejs" name="node" version="22.13.0">
+         <artifact name="node-22.13.0-darwin-arm64.tar.gz">
+            <sha256 value="bc1e374e7393e2f4b20e5bbc157d02e9b1fb2c634b2f992136b38fb8ca2023b7" origin="Generated by Node" reason="Artifact is not signed. Remove when https://github.com/nodejs/node/issues/53917 is resolved"/>
+         </artifact>
+         <artifact name="node-22.13.0-darwin-x64.tar.gz">
+            <sha256 value="cfaaf5edde585a15547f858f5b3b62a292cf5929a23707b6f1e36c29a32487be" origin="Generated by Node" reason="Artifact is not signed. Remove when https://github.com/nodejs/node/issues/53917 is resolved"/>
+         </artifact>
+         <artifact name="node-22.13.0-linux-x64.tar.gz">
+            <sha256 value="9a33e89093a0d946c54781dcb3ccab4ccf7538a7135286528ca41ca055e9b38f" origin="Generated by Node" reason="Artifact is not signed. Remove when https://github.com/nodejs/node/issues/53917 is resolved"/>
+         </artifact>
+      </component>
       <component group="org.ow2" name="ow2" version="1.5">
          <artifact name="ow2-1.5.pom">
             <sha256 value="0f8a1b116e760b8fe6389c51b84e4b07a70fc11082d4f936e453b583dd50b43b" origin="Generated by Gradle" reason="Artifact is not signed"/>
diff --git a/room/room-compiler/src/main/kotlin/androidx/room/vo/InsertFunction.kt b/room/room-compiler/src/main/kotlin/androidx/room/vo/InsertFunction.kt
index 3a966ff01e5..dcdd96355ac 100644
--- a/room/room-compiler/src/main/kotlin/androidx/room/vo/InsertFunction.kt
+++ b/room/room-compiler/src/main/kotlin/androidx/room/vo/InsertFunction.kt
@@ -23,7 +23,7 @@ import androidx.room.solver.shortcut.binder.InsertOrUpsertFunctionBinder

 class InsertFunction(
     element: XMethodElement,
-    @OnConflictStrategy val onConflict: Int,
+    @param:OnConflictStrategy val onConflict: Int,
     entities: Map<String, ShortcutEntity>,
     returnType: XType,
     parameters: List<ShortcutQueryParameter>,
diff --git a/room/room-compiler/src/main/kotlin/androidx/room/vo/UpdateFunction.kt b/room/room-compiler/src/main/kotlin/androidx/room/vo/UpdateFunction.kt
index fbf3eaaff43..a6a26252d5b 100644
--- a/room/room-compiler/src/main/kotlin/androidx/room/vo/UpdateFunction.kt
+++ b/room/room-compiler/src/main/kotlin/androidx/room/vo/UpdateFunction.kt
@@ -25,5 +25,5 @@ class UpdateFunction(
     entities: Map<String, ShortcutEntity>,
     parameters: List<ShortcutQueryParameter>,
     functionBinder: DeleteOrUpdateFunctionBinder?,
-    @OnConflictStrategy val onConflictStrategy: Int
+    @param:OnConflictStrategy val onConflictStrategy: Int
 ) : DeleteOrUpdateShortcutFunction(element, entities, parameters, functionBinder)
diff --git a/room/room-gradle-plugin/src/main/java/androidx/room/gradle/integration/AndroidPluginIntegration.kt b/room/room-gradle-plugin/src/main/java/androidx/room/gradle/integration/AndroidPluginIntegration.kt
index 0be4bde5cca..2bbb95691a8 100644
--- a/room/room-gradle-plugin/src/main/java/androidx/room/gradle/integration/AndroidPluginIntegration.kt
+++ b/room/room-gradle-plugin/src/main/java/androidx/room/gradle/integration/AndroidPluginIntegration.kt
@@ -194,10 +194,12 @@ internal class AndroidPluginIntegration(private val common: CommonIntegration) {
                     try {
                         // Because of KT-58009, we need to add a `listOf(argProvider)` instead
                         // of `argProvider`.
+                        @Suppress("DEPRECATION")
                         task.annotationProcessorOptionProviders.add(listOf(argProvider))
                     } catch (e: Throwable) {
                         // Once KT-58009 is fixed, adding `listOf(argProvider)` will fail, we will
                         // pass `argProvider` instead, which is the correct way.
+                        @Suppress("DEPRECATION")
                         task.annotationProcessorOptionProviders.add(argProvider)
                     }
                 }

