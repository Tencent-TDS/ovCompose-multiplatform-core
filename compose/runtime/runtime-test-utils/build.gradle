/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.AndroidXComposePlugin
import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.LibraryType
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
    id("com.android.library")
    id("JetbrainsAndroidXPlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXComposeMultiplatform {
    android()
    desktop()
    darwin()
    js()
    wasm()
    linuxX64()
    linuxArm64()
}

kotlin {
    watchosArm64()
    watchosArm32()
    watchosX64()
    watchosSimulatorArm64()
    tvosArm64()
    tvosX64()
    tvosSimulatorArm64()
    mingwX64()

    sourceSets {
        commonMain.dependencies {
            implementation(libs.kotlinStdlib)
            implementation(projectOrArtifact(":compose:runtime:runtime"))
            implementation kotlin("test")
            implementation(libs.kotlinCoroutinesTest)
            implementation(libs.kotlinReflect)
        }

        nonJvmMain {
            dependsOn(commonMain)
            dependencies {
                implementation(libs.atomicFu)
            }
        }
        targets.all { target ->
            if (target.platformType !in [
                    KotlinPlatformType.androidJvm,
                    KotlinPlatformType.jvm,
                    KotlinPlatformType.common
            ]) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nonJvmMain)
                }
            }
        }
    }
}

androidx {
    name = "Compose Internal Test Utils"
    type = LibraryType.INTERNAL_TEST_LIBRARY
    publish = Publish.NONE
    inceptionYear = "2024"
    description = "Compose runtime test utils shared between runtime and compiler tests."
}

android {
    namespace "androidx.compose.runtime.testutils"
}
