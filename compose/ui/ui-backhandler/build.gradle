/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.PlatformIdentifier
import androidx.build.SoftwareType
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
    id("com.android.library")
}

androidXMultiplatform {
    androidTarget()
    desktop()
    mac()
    ios()
    js()
    wasmJs()

    // TODO: Needs to be removed. Keep it for correct configuration of dependent modules.
    linuxX64Stubs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinCoroutinesCore)
                implementation("androidx.annotation:annotation:1.9.1")
                implementation(project(":compose:runtime:runtime"))
                implementation(project(":compose:ui:ui-util"))
                implementation(project(":lifecycle:lifecycle-runtime-compose"))
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTest)
            }
        }

        jvmMain {
            dependsOn(commonMain)
        }

        jvmTest {
            dependsOn(commonTest)
        }

        androidMain {
            dependsOn(jvmMain)
            dependencies {
                api("androidx.activity:activity-compose:1.8.0")
            }
        }

        // TODO: Align naming: nonAndroidMain
        jbMain {
            dependsOn(commonMain)
        }

        jbTest {
            dependsOn(commonTest)
        }

        desktopMain {
            dependsOn(jvmMain)
            dependsOn(jbMain)
        }

        desktopTest {
            dependsOn(jvmTest)
            dependsOn(jbTest)
        }

        nativeMain {
            dependsOn(jbMain)
        }

        nativeTest {
            dependsOn(jbTest)
        }

        webMain {
            dependsOn(jbMain)
        }

        webTest {
            dependsOn(jbTest)
        }

        targets.configureEach { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet.dependsOn(nativeMain)
                target.compilations["test"].defaultSourceSet.dependsOn(nativeTest)
            } else if (target.platformType in [KotlinPlatformType.js, KotlinPlatformType.wasm]) {
                target.compilations["main"].defaultSourceSet.dependsOn(webMain)
                target.compilations["test"].defaultSourceSet.dependsOn(webTest)
            }
        }
    }
}

androidx {
    name = "Compose BackHandler"
    type = SoftwareType.PUBLISHED_LIBRARY_ONLY_USED_BY_KOTLIN_CONSUMERS
    inceptionYear = "2025"
    description = "Provides BackHandler in Compose Multiplatform projects"
    legacyDisableKotlinStrictApiMode = true
}

android {
    namespace "androidx.compose.ui.backhandler"
}
