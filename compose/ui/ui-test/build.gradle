/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.konan.target.Family

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

androidXMultiplatform {
    androidTarget()
    desktop()
    mac()
    ios()
    js()
    wasmJs()

    // TODO: Needs to be removed. Keep it for correct configuration of dependent modules.
    linuxX64Stubs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                api(project(":compose:ui:ui"))
                api(project(":compose:ui:ui-text"))
                api(project(":compose:ui:ui-unit"))
                api(project(":compose:runtime:runtime"))
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
                api(libs.kotlinCoroutinesTest)
                implementation(project(":compose:ui:ui-util"))
                implementation("androidx.collection:collection:1.5.0")
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTest)
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
            }
        }

        jvmTest {
            dependsOn(commonTest)
        }

        androidMain {
            dependsOn(jvmMain)
            dependencies {
                api(project(":compose:ui:ui-graphics"))
                implementation("androidx.activity:activity-compose:1.3.0")
                implementation("androidx.annotation:annotation:1.8.1")
                implementation("androidx.core:core-ktx:1.12.0")
                implementation("androidx.test.espresso:espresso-core:3.5.0")
                implementation("androidx.test.espresso:espresso-idling-resource:3.5.0")
                implementation("androidx.test:monitor:1.6.1")
            }
        }

        androidCommonTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(project(":compose:test-utils"))
                implementation(libs.truth)
            }
        }

        androidInstrumentedTest {
            dependsOn(androidCommonTest)
            dependencies {
                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:material:material"))
                implementation(project(":compose:animation:animation"))
                implementation(project(":compose:ui:ui-test"))
                implementation("androidx.activity:activity-compose:1.3.1")
                implementation("androidx.fragment:fragment-testing:1.4.1")

                implementation(libs.mockitoCore)
                implementation(libs.mockitoKotlin)
                implementation(libs.dexmakerMockito)
                implementation(libs.kotlinTest)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.truth)

            }
        }

        androidUnitTest {
            dependsOn(androidCommonTest)
            dependencies {
                implementation(libs.truth)
                implementation(libs.robolectric)
                implementation(libs.mockitoCore4)
                implementation(libs.mockitoKotlin4)
                implementation(libs.byteBuddy)

                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:animation:animation-core"))
                implementation(project(":compose:material:material"))
                implementation(project(":compose:test-utils"))
            }
        }

        // TODO: Align naming: nonAndroidMain
        skikoMain {
            dependsOn(commonMain)
            dependencies {
                implementation(libs.atomicFu)
            }
        }

        skikoTest {
            dependsOn(commonTest)
            dependencies {
                // TODO: Uncomment after fix foundation/material build scripts
//                implementation(project(":compose:material:material"))
//                implementation(project(":compose:foundation:foundation"))
            }
        }

        desktopMain {
            dependsOn(jvmMain)
            dependsOn(skikoMain)
            dependencies {
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.skiko)
            }
        }

        desktopTest {
            dependsOn(jvmTest)
            dependsOn(skikoTest)
            dependencies {
                implementation(libs.skikoCurrentOs)
            }
        }

        // TODO: Align naming: nonJvmMain
        jsNativeMain {
            dependsOn(skikoMain)
        }

        jsNativeTest {
            dependsOn(skikoTest)
        }

        nativeMain {
            dependsOn(jsNativeMain)
        }

        nativeTest {
            dependsOn(jsNativeTest)
        }

        macosMain {
            dependsOn(nativeMain)
        }

        macosTest {
            dependsOn(nativeTest)
        }

        uikitMain {
            dependsOn(nativeMain)
        }

        uikitTest {
            dependsOn(nativeTest)
        }

        webMain {
            dependsOn(jsNativeMain)
        }

        webTest {
            dependsOn(jsNativeTest)
        }

        targets.configureEach { target ->

            // TODO: Ignore stubs. Remove together with stubs target
            if (target.name.endsWith("Stubs")) return

            if (target.platformType == KotlinPlatformType.native) {
                if (target.konanTarget.family == Family.IOS) {
                    target.compilations["main"].defaultSourceSet.dependsOn(uikitMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(uikitTest)
                } else if (target.konanTarget.family == Family.OSX) {
                    target.compilations["main"].defaultSourceSet.dependsOn(macosMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(macosTest)
                } else {
                    target.compilations["main"].defaultSourceSet.dependsOn(nativeMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(nativeTest)
                }
            } else if (target.platformType in [KotlinPlatformType.js, KotlinPlatformType.wasm]) {
                target.compilations["main"].defaultSourceSet.dependsOn(webMain)
                target.compilations["test"].defaultSourceSet.dependsOn(webTest)
            }
        }

        // TODO: Needs to be removed. Keep it for correct configuration of dependent modules.
        commonStubsMain {
            dependsOn(commonMain)
        }
        linuxx64StubsMain {
            dependsOn(commonStubsMain)
        }
    }
}

android {
    compileSdk = 35
    namespace = "androidx.compose.ui.test"
    // TODO(b/345531033)
    experimentalProperties["android.lint.useK2Uast"] = false
}

androidx {
    name = "Compose Testing"
    type = SoftwareType.PUBLISHED_KOTLIN_ONLY_TEST_LIBRARY
    inceptionYear = "2019"
    description = "Compose testing library"
    legacyDisableKotlinStrictApiMode = true
    metalavaK2UastEnabled = false
    samples(project(":compose:ui:ui-test:ui-test-samples"))
}
