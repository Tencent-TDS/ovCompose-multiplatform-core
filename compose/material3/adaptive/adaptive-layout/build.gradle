/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.AndroidXComposePlugin
import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
    id("JetbrainsAndroidXPlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXComposeMultiplatform {
    android()
    desktop()
    darwin()
    wasm()
    js()
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                api(project(":compose:material3:adaptive:adaptive"))
                api(project(":compose:animation:animation-core"))
                api(project(":compose:ui:ui"))
                implementation(project(":compose:animation:animation"))
                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:foundation:foundation-layout"))
                implementation(project(":compose:ui:ui-geometry"))
                implementation(project(":compose:ui:ui-util"))
                implementation("org.jetbrains.androidx.window:window-core:1.3.1")
                implementation(project(":collection:collection"))
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTest)
                api(project(":annotation:annotation"))
                implementation(project(":kruth:kruth"))
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
                implementation(libs.kotlinStdlib)
            }
        }

        androidMain {
            dependsOn(jvmMain)
            dependencies {
            }
        }

        desktopMain {
            dependsOn(jvmMain)
            dependencies {
            }
        }

        jvmTest {
            dependsOn(commonTest)
            dependencies {
            }
        }

        desktopTest {
            dependsOn(jvmTest)
        }

        androidInstrumentedTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(project(":compose:material3:material3"))
                implementation(project(":compose:test-utils"))
//                implementation(project(":window:window-testing"))
                implementation(libs.junit)
                implementation(libs.testRunner)
                implementation(libs.truth)
            }
        }

        androidUnitTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(libs.junit)
                implementation(libs.testRunner)
                implementation(libs.truth)
            }
        }

        skikoMain.dependsOn(commonMain)
        desktopMain.dependsOn(skikoMain)
        nonJvmMain.dependsOn(skikoMain)
        webMain.dependsOn(nonJvmMain)
        jsMain.dependsOn(webMain)
        wasmJsMain.dependsOn(webMain)
        nativeMain.dependsOn(nonJvmMain)

        skikoTest.dependsOn(commonTest)
        desktopTest.dependsOn(skikoTest)
        nonJvmTest.dependsOn(skikoTest)
        webTest.dependsOn(nonJvmTest)
        jsTest.dependsOn(webTest)
        wasmJsTest.dependsOn(webTest)
        nativeTest.dependsOn(nonJvmTest)
    }
}

// This task updates the translations of the localizable strings in this module.
// It obtains them from Android's base repository.
tasks.register("updateTranslations", UpdateTranslationsTask.class) {
    group = "localization"
    gitRepo = "https://github.com/androidx/androidx"
    repoResDirectories = [
            "compose/material3/adaptive/adaptive-layout/src/androidMain/res"
    ]
    targetDirectory = project.file("src/skikoMain/kotlin/androidx/compose/material3/adaptive/l10n")
    targetPackageName = "androidx.compose.material3.adaptive.l10n"
    kotlinStringsPackageName = "androidx.compose.material3.adaptive.layout"
    stringByResourceName = [
            // These come are from the material3.adaptive-layout module resources
            "m3_adaptive_default_pane_expansion_drag_handle_content_description": "defaultPaneExpansionDragHandleContentDescription",
            "m3_adaptive_default_pane_expansion_drag_handle_state_description"  : "defaultPaneExpansionDragHandleStateDescription",
            "m3_adaptive_default_pane_expansion_drag_handle_action_description" : "defaultPaneExpansionDragHandleActionDescription",
            "m3_adaptive_default_pane_expansion_proportion_anchor_description"  : "defaultPaneExpansionProportionAnchorDescription",
            "m3_adaptive_default_pane_expansion_start_offset_anchor_description": "defaultPaneExpansionStartOffsetAnchorDescription",
            "m3_adaptive_default_pane_expansion_end_offset_anchor_description"  : "defaultPaneExpansionEndOffsetAnchorDescription",
    ]
    // This is all the locales translated by Compose on Android in the ui module:
    // https://github.com/androidx/androidx/tree/androidx-main/compose/material3/adaptive/adaptive-layout/src/androidMain/res
    // with the exception of
    // - b+sr+Latn which doesn't appear to be supported by Java
    locales = [
            "en", "af", "am", "ar", "as", "az", "be", "bg", "bn", "bs", "ca", "cs", "da",
            "de", "el", "en_AU", "en_CA", "en_GB", "en_IN", "es_US", "es", "et", "eu", "fa",
            "fi", "fr_CA", "fr", "gl", "gu", "hi", "hr", "hu", "hy", "in", "is", "it", "iw", "ja",
            "ka", "kk", "km", "kn", "ko", "ky", "lo", "lt", "lv", "mk", "ml", "mn", "mr", "ms",
            "my", "nb", "ne", "nl", "or", "pa", "pl", "pt_BR", "pt_PT", "pt", "ro", "ru", "si",
            "sk", "sl", "sq", "sr", "sv", "sw", "ta", "te", "th", "tl", "tr", "uk", "ur", "uz",
            "vi", "zh_CN", "zh_HK", "zh_TW", "zu"
    ]
}

android {
    namespace "androidx.compose.material3.adaptive.layout"
}

androidx {
    name = "Material Adaptive"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2023"
    description = "Compose Material Design Adaptive Library"
    legacyDisableKotlinStrictApiMode = true
//    samples(project(":compose:material3:adaptive:adaptive-samples"))
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += "-Xcontext-receivers"
}

// Screenshot tests related setup
android {
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/../../golden/compose/material3/adaptive"
    namespace "androidx.compose.material3.adaptive.layout"
}
