/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXComposePlugin
import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
    id("kotlinx-atomicfu")
    id("JetbrainsAndroidXPlugin")
    //id("AndroidXPaparazziPlugin") // isn't supported on Windows
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

dependencies {


    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */
        implementation(libs.kotlinStdlib)
        implementation("androidx.activity:activity-compose:1.5.0")
        implementation("androidx.compose.animation:animation-core:1.3.1")
        implementation(project(":compose:foundation:foundation-layout"))
        implementation("androidx.compose.ui:ui-util:1.3.1")
        api(project(":compose:foundation:foundation"))
        api("androidx.compose.material:material-icons-core:1.3.1")
        api("androidx.compose.material:material-ripple:1.3.1")
        api("androidx.compose.runtime:runtime:1.3.1")
        api("androidx.compose.ui:ui-graphics:1.3.1")
        api("androidx.compose.ui:ui:1.3.1")
        api("androidx.compose.ui:ui-text:1.3.1")

        // TODO: remove next 3 dependencies when b/202810604 is fixed
        implementation("androidx.savedstate:savedstate-ktx:1.2.0")
        implementation("androidx.lifecycle:lifecycle-runtime:2.6.0")
        implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.0")

        implementation("androidx.lifecycle:lifecycle-common-java8:2.6.0")

        testImplementation(libs.testRules)
        testImplementation(libs.testRunner)
        testImplementation(libs.junit)
        testImplementation(libs.truth)

        androidTestImplementation(project(":compose:material3:material3:material3-samples"))
        androidTestImplementation(project(":compose:foundation:foundation-layout"))
        androidTestImplementation(project(":compose:test-utils"))
        androidTestImplementation(androidxArtifact(":test:screenshot:screenshot"))
        androidTestImplementation(androidxArtifact(":core:core"))
        androidTestImplementation(libs.testRules)
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.junit)
        androidTestImplementation(libs.truth)
        androidTestImplementation(libs.dexmakerMockitoInlineExtended)
        androidTestImplementation(libs.mockitoKotlin)
        androidTestImplementation(libs.testUiautomator)

        lintPublish project(":compose:material3:material3-lint")
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
        darwin()
        wasm()
        js()
    }

    kotlin {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlib)
                implementation(project(":compose:animation:animation-core"))

                api(project(":compose:foundation:foundation"))
                api("org.jetbrains.compose.material:material-icons-core:1.6.11") {
                    // exclude dependencies, because they override local projects when we build 0.0.0-* version
                    // (see https://repo1.maven.org/maven2/org/jetbrains/compose/material/material-icons-core-desktop/1.6.11/material-icons-core-desktop-1.6.11.module)
                    exclude group: "org.jetbrains.compose.runtime"
                    exclude group: "org.jetbrains.compose.ui"
                }
                api(project(":compose:material:material-ripple"))
                api(project(":compose:runtime:runtime"))
                api(project(":compose:ui:ui-graphics"))
                api(project(":compose:ui:ui-text"))

                implementation(project(":compose:ui:ui-util"))
                implementation(project(":compose:ui:ui-backhandler"))
                implementation(project(":compose:foundation:foundation-layout"))
                implementation(project(":annotation:annotation"))
                implementation(project(":collection:collection"))
            }

            androidMain.dependencies {
                api("androidx.annotation:annotation:1.1.0")
                implementation("androidx.activity:activity-compose:1.5.0")

                // TODO: remove next 3 dependencies when b/202810604 is fixed
                implementation("androidx.savedstate:savedstate-ktx:1.2.0")
                implementation("androidx.lifecycle:lifecycle-runtime:2.6.0")
                implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.0")

                implementation("androidx.lifecycle:lifecycle-common-java8:2.6.0")
            }

            skikoMain {
                dependsOn(commonMain)
                dependencies {
                    implementation(libs.datetime)
                    implementation(libs.atomicFu)
                }
            }

            nonJvmMain.dependsOn(commonMain)
            nativeMain.dependsOn(nonJvmMain)
            jsWasmMain.dependsOn(nonJvmMain)

            desktopMain.dependsOn(skikoMain)

            jsNativeMain.dependsOn(skikoMain)

            nativeMain.dependsOn(jsNativeMain)
            jsWasmMain.dependsOn(jsNativeMain)
            jsMain {
                kotlin.srcDir("src/webCommonW3C/kotlin")
                dependsOn(jsWasmMain)
            }
            wasmJsMain {
                kotlin.srcDir("src/webCommonW3C/kotlin")
                dependsOn(jsWasmMain)
                dependencies {
                    implementation(libs.kotlinStdlib)
                }
            }

            // TODO(b/214407011): These dependencies leak into instrumented tests as well. If you
            //  need to add Robolectric (which must be kept out of androidAndroidTest), use a top
            //  level dependencies block instead:
            //  `dependencies { testImplementation(libs.robolectric) }`
            androidTest.dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
            }

            androidAndroidTest.dependencies {
                implementation(project(":compose:material3:material3:material3-samples"))
                implementation(project(":compose:test-utils"))
                implementation(project(':compose:foundation:foundation-layout'))
                implementation(androidxArtifact(":test:screenshot:screenshot"))
                implementation(androidxArtifact(":core:core"))
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.dexmakerMockitoInlineExtended)
                implementation(libs.mockitoKotlin)
                implementation(libs.testUiautomator)
            }

            skikoTest.dependencies {
                implementation(libs.kotlinTest)
                implementation(project(":compose:ui:ui-test"))
            }

            desktopTest {
                dependsOn(skikoTest)

                dependencies {
                    implementation(project(":compose:ui:ui-test-junit4"))
                    implementation(libs.truth)
                    implementation(libs.junit)
                    implementation(libs.skikoCurrentOs)
                }
            }

            jsWasmTest {
                dependsOn(skikoTest)
            }

            jsTest {
                dependsOn(jsWasmTest)
            }

            wasmJsTest {
                dependsOn(jsWasmTest)
            }

            uikitTest {
                dependsOn(skikoTest)
            }

            configureEach {
                languageSettings.optIn("androidx.compose.material3.ExperimentalMaterial3Api")
            }
        }
    }
}

// This task updates the translations of the localizable strings in this module.
// It obtains them from Android's base repository.
tasks.register("updateTranslations", UpdateTranslationsTask.class) {
    group = "localization"
    gitRepo = "https://github.com/androidx/androidx"
    repoResDirectories = [
            "compose/ui/ui/src/androidMain/res",
            "compose/material3/material3/src/androidMain/res"
    ]
    targetDirectory = project.file("src/skikoMain/kotlin/androidx/compose/material3/l10n")
    targetPackageName = "androidx.compose.material3.l10n"
    kotlinStringsPackageName = "androidx.compose.material3.internal"
    stringByResourceName = [
            // These come are from the ui module resources
            "navigation_menu": "NavigationMenu",
            "close_drawer": "CloseDrawer",
            "close_sheet": "CloseSheet",
            "default_error_message": "DefaultErrorMessage",
            "dropdown_menu": "ExposedDropdownMenu",
            "range_start": "SliderRangeStart",
            "range_end": "SliderRangeEnd",

            // These come from the material3 module resources
            "m3c_dialog": "Dialog",
            "m3c_dropdown_menu_expanded": "MenuExpanded",
            "m3c_dropdown_menu_collapsed": "MenuCollapsed",
            "m3c_snackbar_dismiss": "SnackbarDismiss",
            "m3c_search_bar_search": "SearchBarSearch",
            "m3c_suggestions_available": "SuggestionsAvailable",
            "m3c_date_picker_title": "DatePickerTitle",
            "m3c_date_picker_headline": "DatePickerHeadline",
            "m3c_date_picker_year_picker_pane_title": "DatePickerYearPickerPaneTitle",
            "m3c_date_picker_switch_to_year_selection": "DatePickerSwitchToYearSelection",
            "m3c_date_picker_switch_to_day_selection": "DatePickerSwitchToDaySelection",
            "m3c_date_picker_switch_to_next_month": "DatePickerSwitchToNextMonth",
            "m3c_date_picker_switch_to_previous_month": "DatePickerSwitchToPreviousMonth",
            "m3c_date_picker_navigate_to_year_description": "DatePickerNavigateToYearDescription",
            "m3c_date_picker_headline_description": "DatePickerHeadlineDescription",
            "m3c_date_picker_no_selection_description": "DatePickerNoSelectionDescription",
            "m3c_date_picker_today_description": "DatePickerTodayDescription",
            "m3c_date_picker_scroll_to_later_years": "DatePickerScrollToShowLaterYears",
            "m3c_date_picker_scroll_to_earlier_years": "DatePickerScrollToShowEarlierYears",
            "m3c_date_input_title": "DateInputTitle",
            "m3c_date_input_headline": "DateInputHeadline",
            "m3c_date_input_label": "DateInputLabel",
            "m3c_date_input_headline_description": "DateInputHeadlineDescription",
            "m3c_date_input_no_input_description": "DateInputNoInputDescription",
            "m3c_date_input_invalid_not_allowed": "DateInputInvalidNotAllowed",
            "m3c_date_input_invalid_for_pattern": "DateInputInvalidForPattern",
            "m3c_date_input_invalid_year_range": "DateInputInvalidYearRange",
            "m3c_date_picker_switch_to_calendar_mode": "DatePickerSwitchToCalendarMode",
            "m3c_date_picker_switch_to_input_mode": "DatePickerSwitchToInputMode",
            "m3c_date_range_picker_title": "DateRangePickerTitle",
            "m3c_date_range_picker_start_headline": "DateRangePickerStartHeadline",
            "m3c_date_range_picker_end_headline": "DateRangePickerEndHeadline",
            "m3c_date_range_picker_scroll_to_next_month": "DateRangePickerScrollToShowNextMonth",
            "m3c_date_range_picker_scroll_to_previous_month": "DateRangePickerScrollToShowPreviousMonth",
            "m3c_date_range_picker_day_in_range": "DateRangePickerDayInRange",
            "m3c_date_range_input_title": "DateRangeInputTitle",
            "m3c_date_range_input_invalid_range_input": "DateRangeInputInvalidRangeInput",
            "m3c_bottom_sheet_pane_title": "BottomSheetPaneTitle",
            "m3c_bottom_sheet_drag_handle_description": "BottomSheetDragHandleDescription",
            "m3c_bottom_sheet_collapse_description": "BottomSheetPartialExpandDescription",
            "m3c_bottom_sheet_dismiss_description": "BottomSheetDismissDescription",
            "m3c_bottom_sheet_expand_description": "BottomSheetExpandDescription",
            "m3c_tooltip_long_press_label": "TooltipLongPressLabel",
            "m3c_time_picker_am": "TimePickerAM",
            "m3c_time_picker_pm": "TimePickerPM",
            "m3c_time_picker_period_toggle_description": "TimePickerPeriodToggle",
            "m3c_time_picker_minute_selection": "TimePickerMinuteSelection",
            "m3c_time_picker_hour_selection": "TimePickerHourSelection",
            "m3c_time_picker_hour_suffix": "TimePickerHourSuffix",
            "m3c_time_picker_minute_suffix": "TimePickerMinuteSuffix",
            "m3c_time_picker_hour_24h_suffix": "TimePicker24HourSuffix",
            "m3c_time_picker_hour": "TimePickerHour",
            "m3c_time_picker_minute": "TimePickerMinute",
            "m3c_time_picker_hour_text_field": "TimePickerHourTextField",
            "m3c_time_picker_minute_text_field": "TimePickerMinuteTextField",
            "m3c_tooltip_pane_description": "TooltipPaneDescription",
            "m3c_dropdown_menu_toggle": "ToggleDropdownMenu"
    ]
    // This is all the locales translated by Compose on Android in the ui module:
    // https://github.com/androidx/androidx/tree/androidx-main/compose/ui/ui/src/androidMain/res
    // with the exception of
    // - b+sr+Latn which doesn't appear to be supported by Java
    // - en_XC which has weird invisible LRM characters, and the visible text is the same as for
    //   en anyway.
    locales = [
            "en", "af", "am", "ar", "as", "az", "be", "bg", "bn", "bs", "ca", "cs", "da", "de",
            "el", "en_AU", "en_CA", "en_GB", "en_IN", "es", "es_US", "et", "eu", "fa",
            "fi", "fr", "fr_CA", "gl", "gu", "hi", "hr", "hu", "hy", "in", "is", "it", "iw",
            "ja", "ka", "kk", "km", "kn", "ko", "ky", "lo", "lt", "lv", "mk", "ml", "mn", "mr",
            "ms", "my", "nb", "ne", "nl", "or", "pa", "pl", "pt", "pt_BR", "pt_PT", "ro", "ru",
            "si", "sk", "sl", "sq", "sr", "sv", "sw", "ta", "te", "th", "tl", "tr", "uk", "ur",
            "uz", "vi", "zh_CN", "zh_HK", "zh_TW", "zu"
    ]
}

androidx {
    name = "Compose Material3 Components"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2021"
    description = "Compose Material You Design Components library"
}

// Screenshot tests related setup
android {
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/golden/compose/material3/material3"
    namespace "androidx.compose.material3"
}
