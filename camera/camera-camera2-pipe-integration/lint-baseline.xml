<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.7.0-alpha02" type="baseline" client="gradle" dependencies="false" name="AGP (8.7.0-alpha02)" variant="all" version="8.7.0-alpha02">

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt() == state).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        val lastRequest = fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="            fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        val lastRequest = fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                removeFirstKt()"
        errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraState.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                removeFirstKt()"
        errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraState.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="class AspectRatioLegacyApi21Quirk : Quirk {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/AspectRatioLegacyApi21Quirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="class ExcludedSupportedSizesQuirk : Quirk {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExcludedSupportedSizesQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="class ExtraCroppingQuirk : Quirk {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExtraCroppingQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="class ExtraSupportedSurfaceCombinationsQuirk : Quirk {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExtraSupportedSurfaceCombinationsQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="class Nexus4AndroidLTargetAspectRatioQuirk : Quirk {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/Nexus4AndroidLTargetAspectRatioQuirk.kt"/>
    </issue>

    <issue
        id="SupportAnnotationUsage"
        message="Did you mean `@get:VisibleForTesting`? Without `get:` this annotates the constructor parameter itself instead of the associated getter."
        errorLine1="    @VisibleForTesting internal val requestListener: ComboRequestListener,"
        errorLine2="    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/interop/Camera2CameraControl.kt"/>
    </issue>

</issues>
