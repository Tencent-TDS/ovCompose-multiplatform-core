// Signature format: 4.0
package androidx.privacysandbox.ui.client {

  @Deprecated public interface LocalSdkActivityLauncher<T extends android.app.Activity & androidx.lifecycle.LifecycleOwner> extends androidx.privacysandbox.ui.core.SdkActivityLauncher {
    method @Deprecated public void dispose();
  }

  public final class SandboxedUiAdapterFactory {
    method public androidx.privacysandbox.ui.core.SandboxedUiAdapter createFromCoreLibInfo(android.os.Bundle coreLibInfo);
    field public static final androidx.privacysandbox.ui.client.SandboxedUiAdapterFactory INSTANCE;
  }

  public final class SdkActivityLaunchers {
    method @Deprecated public static <T extends android.app.Activity & androidx.lifecycle.LifecycleOwner> androidx.privacysandbox.ui.client.LocalSdkActivityLauncher<T> createSdkActivityLauncher(T, kotlin.jvm.functions.Function0<java.lang.Boolean> allowLaunch);
    method @Deprecated public static android.os.Bundle toLauncherInfo(androidx.privacysandbox.ui.core.SdkActivityLauncher);
  }

}

package androidx.privacysandbox.ui.client.view {

  public final class SandboxedSdkView extends android.view.ViewGroup {
    ctor public SandboxedSdkView(android.content.Context context);
    ctor public SandboxedSdkView(android.content.Context context, optional android.util.AttributeSet? attrs);
    method public void orderProviderUiAboveClientUi(boolean providerUiOnTop);
    method public void setAdapter(androidx.privacysandbox.ui.core.SandboxedUiAdapter sandboxedUiAdapter);
    method public void setEventListener(androidx.privacysandbox.ui.client.view.SandboxedSdkViewEventListener? eventListener);
  }

  public interface SandboxedSdkViewEventListener {
    method public void onUiClosed();
    method public void onUiDisplayed();
    method public void onUiError(Throwable error);
  }

}

