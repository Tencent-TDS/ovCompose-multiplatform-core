import androidx.build.AndroidXComposePlugin
import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.gradle.tasks.KotlinNativeCompile

plugins {
    id("AndroidXPlugin")

    //  TODO move all functionality to Compose-independent plugin (`collection` shouldn't depend on Compose concepts)
    id("AndroidXComposePlugin")
    id("JetbrainsAndroidXPlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXComposeMultiplatform {
    js()
    wasm()
    darwin()
    linux()
}

kotlin {
    jvm()
    // Not all modules can have these targets, so declare them here instead of androidXComposeMultiplatform.
    // We can support the kotlin-native targets supported by kotlin coroutines:
    // https://github.com/Kotlin/kotlinx.coroutines/blob/master/gradle/compile-native-multiplatform.gradle
    // NOTE: Keep this list in sync with runtime-saveable's targets.
    watchosArm64()
    watchosArm32()
    watchosX64()
    watchosSimulatorArm64()
    tvosArm64()
    tvosX64()
    tvosSimulatorArm64()
    mingwX64()

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
            }
        }

        nonJvmMain {
            dependsOn commonMain
        }

        targets.all { target ->
            if (target.platformType !in [KotlinPlatformType.jvm, KotlinPlatformType.common]) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nonJvmMain)
                }
            }
        }

        // Workaround for https://youtrack.jetbrains.com/issue/KT-51763
        // Make sure commonization runs before any compilation task.
        tasks.withType(KotlinNativeCompile).configureEach {
            it.dependsOn(tasks.named("commonize"))
        }
    }
}

androidx {
    name = "Annotation"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2013"
    description = "Provides source annotations for tooling and readability."
}

androidxCompose {
    composeCompilerPluginEnabled = false
}
