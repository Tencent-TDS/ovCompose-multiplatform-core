/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */


import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.PlatformIdentifier
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("JetbrainsAndroidXPlugin")
}

JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXMultiplatform {
    android()
    desktop()
    mac()
    linux()
    ios()
    js()
    wasm()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(project(":lifecycle:lifecycle-runtime"))
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.kotlinTest)
                implementation(project(":kruth:kruth"))
            }
        }

        androidInstrumentedTest {
            dependencies {
                implementation(libs.truth)
                implementation(libs.testExtJunit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.kotlinCoroutinesTest)
            }
        }

        jvmMain.dependsOn(commonMain)
        jbMain.dependsOn(commonMain)
        androidMain.dependsOn(jvmMain)
        desktopMain.dependsOn(jvmMain)
        desktopMain.dependsOn(jbMain)
        nativeMain.dependsOn(jbMain)
        webMain.dependsOn(jbMain)
        jsMain.dependsOn(webMain)
        wasmJsMain.dependsOn(webMain)

        jvmTest.dependsOn(commonTest)
        androidUnitTest.dependsOn(jvmTest)
        jbTest.dependsOn(commonTest)
        desktopTest.dependsOn(jvmTest)
        desktopTest.dependsOn(jbTest)
        nativeTest.dependsOn(jbTest)
        webTest.dependsOn(jbTest)
        jsTest.dependsOn(webTest)
        wasmJsTest.dependsOn(webTest)

        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet.dependsOn(nativeMain)
                target.compilations["test"].defaultSourceSet.dependsOn(nativeTest)
            }
        }
    }
}

kotlin {
    watchosArm64()
    watchosArm32()
    watchosX64()
    watchosSimulatorArm64()
    tvosArm64()
    tvosX64()
    tvosSimulatorArm64()
}

dependencies {
    lintPublish(project(":lifecycle:lifecycle-runtime-testing-lint"))
}

androidx {
    name = "Lifecycle Runtime Testing"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2019"
    description = "Testing utilities for 'lifecycle' artifact"
    legacyDisableKotlinStrictApiMode = true
}

android {
    namespace "androidx.lifecycle.testing"
}
