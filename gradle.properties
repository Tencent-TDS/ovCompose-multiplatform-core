org.gradle.jvmargs=-Xmx10g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -Dkotlin.daemon.jvm.options=-XX:MaxMetaspaceSize=1g -Dlint.nullness.ignore-deprecated=true -Dorg.gradle.configuration-cache.internal.load-after-store=false
org.gradle.daemon=true
org.gradle.configureondemand=true
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.welcome=never
# Disabled due to https://github.com/gradle/gradle/issues/18626
# org.gradle.vfs.watch=true
# Reenabled in gradlew, but disabled in Studio until these errors become shown (b/268380971) or computed more quickly (https://github.com/gradle/gradle/issues/23272)
org.gradle.dependency.verification=off
org.gradle.dependency.verification.console=verbose
org.gradle.unsafe.configuration-cache=false
org.gradle.unsafe.configuration-cache-problems=warn
org.gradle.unsafe.configuration-cache.max-problems=4000

#android.builder.sdkDownload=false
android.uniquePackageNames=false
android.enableAdditionalTestOutput=true
android.useAndroidX=true
android.nonTransitiveRClass=true
# Pending cleanup to support non-constant R class IDs b/260409846
android.nonFinalResIds=false
# Workaround for b/141364941
android.forceJacocoOutOfProcess=true
android.experimental.lint.missingBaselineIsEmptyBaseline=true

# Generate versioned API files
androidx.writeVersionedApiFiles=true

# Run the CheckAarMetadata task
android.experimental.disableCompileSdkChecks=false

# Do restrict compileSdkPreview usage
androidx.allowCustomCompileSdk=false

# Don't warn about needing to update AGP
android.suppressUnsupportedCompileSdk=UpsideDownCake,VanillaIceCream,33

# Disable features we do not use
android.defaults.buildfeatures.aidl=false
android.defaults.buildfeatures.buildconfig=false
android.defaults.buildfeatures.renderscript=false
android.defaults.buildfeatures.resvalues=false
android.defaults.buildfeatures.shaders=false

# Enable adding baseline-prof.txt files to AAR artifacts
android.experimental.enableArtProfiles=true

# Disallow resolving dependencies at configuration time, which is a slight performance problem
android.dependencyResolutionAtConfigurationTime.disallow=true
android.suppressUnsupportedOptionWarnings=android.suppressUnsupportedOptionWarnings,android.dependencyResolutionAtConfigurationTime.disallow,android.experimental.lint.missingBaselineIsEmptyBaseline,android.experimental.lint.version
# Workaround for b/162074215
android.includeDependencyInfoInApks=false
# Allow multiple r8 tasks at once because otherwise they can make the critical path longer: b/256187923
android.r8.maxWorkers=2

kotlin.stdlib.default.dependency=false
# mac targets cannot be built on linux, suppress the warning.
kotlin.native.ignoreDisabledTargets=true
kotlin.mpp.enableCInteropCommonization=true
# Suppress pointless warning about mpp being experimental
kotlin.mpp.stability.nowarn=true
# b/227307216
kotlin.mpp.absentAndroidTarget.nowarn=true
# b/261241595
#kotlin.mpp.androidSourceSetLayoutVersion=1
#kotlin.mpp.androidSourceSetLayoutVersion1.nowarn=true
# As of October 3 2022, AGP 7.4.0-alpha08 is higher than AGP 7.3
# Presumably complains if using a non-stable AGP, which we are regularly doing to test pre-stable.
kotlin.mpp.androidGradlePluginCompatibility.nowarn=true
# Until we get a newer AGP which doesn't do this
kotlin.options.suppressFreeCompilerArgsModificationWarning=true
# b/275795136
ksp.incremental=false

# Properties we often want to toggle
ksp.version.check=false
# androidx.compose.multiplatformEnabled=true

# properties for jb-main branch
# Enable kotlin/native experimental memory model
kotlin.native.binary.memoryModel=experimental
# Workaround for Apple Gradle plugin
generateBuildableXcodeproj.skipKotlinFrameworkDependencies=true

androidx.compose.multiplatformEnabled=true
androidx.versionExtraCheckEnabled=false
androidx.alternativeProjectUrl=https://github.com/JetBrains/compose-jb
androidx.validateProjectStructure=false
jetbrains.compose.jsCompilerTestsEnabled=true
# some tests require Chrome in nonHeadless mode, so pass 'true' if needed or run the tests via IDEA run configuration
jetbrains.cfw.tests.useChrome=false
kotlin.mpp.import.enableKgpDependencyResolution=true

# We prefer to build compose-core libs using our published compose compiler plugin
# Compatible versions: https://github.com/JetBrains/compose-multiplatform/blob/master/gradle-plugins/compose/src/main/kotlin/org/jetbrains/compose/ComposeCompilerCompatibility.kt
jetbrains.compose.compiler.version=1.5.14.1

# Compose Multiplatform doesn't have its own implementation for Android target.
# When user adds a dependency on `org.jetbrains.compose.*` in Android target,
# in fact `android.compose` is used.
#
# Versions should equal the last merged to the branch
# Format:
#   artifactRedirection.version.<redirectionGroup>.<redirectionModule>
#   covers all sub-module projects
#   (artifactRedirection.version.androidx.compose covers androidx.compose.*:*)
artifactRedirection.version.androidx.compose=1.8.0-rc03
artifactRedirection.version.androidx.compose.material.material-navigation=1.8.0-rc03
artifactRedirection.version.androidx.compose.material3=1.3.1
artifactRedirection.version.androidx.compose.material3.common=1.0.0-alpha01
artifactRedirection.version.androidx.compose.material3.adaptive=1.1.0
artifactRedirection.version.androidx.collection=1.5.0
artifactRedirection.version.androidx.annotation=1.9.1
artifactRedirection.version.androidx.graphics=1.0.1
artifactRedirection.version.androidx.lifecycle=2.9.0-beta01
artifactRedirection.version.androidx.navigation=2.9.0-beta01
artifactRedirection.version.androidx.performance=1.0.0-alpha01
artifactRedirection.version.androidx.savedstate=1.3.0-beta01
artifactRedirection.version.androidx.window=1.4.0-alpha04

# For the purpose of substituteForRedirectedPublishedDependencies (look for it in the code)
artifactRedirection.modulesForKNativeManifest=\
  :annotation:annotation=artifactRedirection.version.androidx.annotation,\
  :collection:collection=artifactRedirection.version.androidx.collection,\
  :graphics:graphics-shapes=artifactRedirection.version.androidx.graphics,\
  :lifecycle:lifecycle-common=artifactRedirection.version.androidx.lifecycle,\
  :lifecycle:lifecycle-runtime=artifactRedirection.version.androidx.lifecycle,\
  :lifecycle:lifecycle-viewmodel=artifactRedirection.version.androidx.lifecycle,\
  :performance:performance-annotation=artifactRedirection.version.androidx.performance

# Enable atomicfu IR transformations
kotlinx.atomicfu.enableJvmIrTransformation=true
kotlinx.atomicfu.enableNativeIrTransformation=true
kotlinx.atomicfu.enableJsIrTransformation=true
